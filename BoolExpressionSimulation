module BoolExpressionSimulation;
    reg A, B, C;
    wire Y;

    // Boolean expression: Y = (A & B) | (~C)
    assign Y = (A & B) | (~C);

    initial begin
        // Test different input combinations
        A = 0; B = 0; C = 0; #10;
        A = 1; B = 0; C = 1; #10;
        // Add more test cases as needed
        $finish; // End simulation
    end
endmodule
module BoolExpressionSimulation_Testbench;
    reg A, B, C;
    wire Y;

    // Instantiate the Boolean expression simulation module
    BoolExpressionSimulation uut (
        .A(A),
        .B(B),
        .C(C),
        .Y(Y)
    );

    // Stimulus
    initial begin
        // Test case 1
        A = 0; B = 0; C = 0; #10 $display("Y=%b", Y);

        // Test case 2
        A = 1; B = 0; C = 1; #10 $display("Y=%b", Y);

        // Add more test cases as needed

        $finish; // End simulation
    end
endmodule
